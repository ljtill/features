name: "PR - Test Features"
on:
  pull_request:
  workflow_dispatch:

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      features: ${{ steps.filter.outputs.changes }}
    steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            argocd: ./**/argocd/**
            bicep: ./**/bicep/**
            binaryen: ./**/binaryen/**
            calicoctl: ./**/calicoctl/**
            cilium: ./**/cilium/**
            clusterctl: ./**/clusterctl/**
            deno: ./**/deno/**
            flux: ./**/flux/**
            func: ./**/func/**
            helm: ./**/helm/**
            istioctl: ./**/istioctl/**
            kind: ./**/kind/**
            kubebuilder: ./**/kubebuilder/**
            kubectl: ./**/kubectl/**
            mkcert: ./**/mkcert/**
            pavex: ./**/pavex/**
            pulumi: ./**/pulumi/**
            rad: ./**/rad/**
            spin: ./**/spin/**
            task: ./**/task/**
            wabt: ./**/wabt/**
            wasm-tools: ./**/wasm-tools/**
            wasmtime: ./**/wasmtime/**
            wit-bindgen: ./**/wit-bindgen/**
            wit-deps: ./**/wit-deps/**
            zig: ./**/zig/**

  test-features:
    needs: [detect-changes]
    runs-on: ${{ matrix.runners }}
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJSON(needs.detect-changes.outputs.features) }}
        runners:
          - macos-latest
          - ubuntu-latest
        baseImage:
          - mcr.microsoft.com/devcontainers/base:bullseye # Debian 11
          - mcr.microsoft.com/devcontainers/base:bookworm # Debian 12
          - mcr.microsoft.com/devcontainers/base:jammy # Ubuntu 22.04
          - mcr.microsoft.com/devcontainers/base:noble # Ubuntu 24.04
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Generating tests for '${{ matrix.features }}' against '${{ matrix.baseImage }}'"
        run: devcontainer features test --skip-scenarios -f ${{ matrix.features }} -i ${{ matrix.baseImage }} .

  test-scenarios:
    needs: [detect-changes]
    runs-on: ${{ matrix.runners }}
    continue-on-error: true
    strategy:
      matrix:
        features: ${{ fromJSON(needs.detect-changes.outputs.features) }}
        runners:
          - macos-latest
          - ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: "Install latest devcontainer CLI"
        run: npm install -g @devcontainers/cli

      - name: "Testing '${{ matrix.features }}' scenarios"
        run: devcontainer features test -f ${{ matrix.features }} --skip-autogenerated  .
